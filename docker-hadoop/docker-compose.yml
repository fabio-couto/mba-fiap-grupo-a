version: "3"

services:
    namenode:
        build: ./01_namenode
        container_name: namenode
        restart: always
        ports:
            - 50070:50070
        volumes:
            - namenode:/hadoop/dfs/name

    resourcemanager:
        build: ./02_resourcemanager
        container_name: resourcemanager
        restart: always
        ports:
            - 8088:8088

    worker1:
        build: ./04_workernode
        container_name: worker1
        restart: always
        ports:
            - 50075:50075
        volumes: 
            - worker1:/hadoop/dfs/data
        depends_on: 
            - namenode
            - resourcemanager

    worker2:
        build: ./04_workernode
        container_name: worker2
        restart: always
        ports:
            - 50076:50075
        volumes: 
            - worker2:/hadoop/dfs/data
        depends_on: 
            - namenode
            - resourcemanager

    worker3:
        build: ./04_workernode
        container_name: worker3
        restart: always
        ports:
            - 50077:50075
        volumes: 
            - worker3:/hadoop/dfs/data
        depends_on: 
            - namenode
            - resourcemanager

    hivemetastore_postgres:
        image: postgres:9.6.22
        container_name: hivemetastore_postgres
        restart: always
        volumes:
            - hivemetastore_postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: hive
            POSTGRES_PASSWORD: hive
            POSTGRES_DB: metastore

    hivemetastore:
        build: ./05_hivemetastore
        container_name: hivemetastore
        restart: always
        depends_on: 
            - hivemetastore_postgres

    hiveserver:
        build: ./06_hiveserver
        container_name: hiveserver
        restart: always
        ports:
            - 10002:10002
        depends_on: 
            - hivemetastore

    hue:
        image: gethue/hue:20191107-135001
        container_name: hue
        restart: always
        ports:
            - 8888:8888
        volumes:
            - ./hue-overrides.ini:/usr/share/hue/desktop/conf/z-hue.ini
        depends_on: 
            - hue_postgres
            - namenode
    
    hue_postgres:
        image: postgres:9.6.22
        container_name: hue_postgres
        restart: always
        volumes:
            - hue_postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: hue
            POSTGRES_PASSWORD: hue
            POSTGRES_DB: hue

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    kafka:
        image: confluentinc/cp-kafka:latest
        container_name: kafka
        depends_on:
            - zookeeper
        ports:
            - 9092:9092
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    kafdrop:
        image: obsidiandynamics/kafdrop:latest
        container_name: kafdrop
        depends_on:
            - kafka
        ports:
            - 19000:9000
        environment:
            KAFKA_BROKERCONNECT: kafka:29092

    flume:
        build: ./07_flume
        container_name: flume

    livy:
        build: ./08_livy
        container_name: livy
        ports:
            - 8998:8998

    influxdb:
        image: quay.io/influxdb/influxdb:v2.0.3
        container_name: influxdb
        ports:
            - 8086:8086
        volumes:
            - influx:/root/.influxdbv2
  
    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        ports:
            - 13000:3000
        volumes: 
            - grafana:/var/lib/grafana
        depends_on:
            - influxdb    
  
    telegraf:
        image: telegraf:latest
        container_name: telegraf
        volumes:
            - ./telegraf.conf:/etc/telegraf/telegraf.conf
            - ./telegraf-storage/input/:/etc/telegraf/input/
        depends_on:
            - influxdb

volumes:
    namenode:
    worker1:
    worker2:
    worker3:
    hivemetastore_postgres:
    hue_postgres:
    influx:
    grafana:
    telegraf:
        
networks:
    default:
        name: hadoop
        enable_ipv6: false